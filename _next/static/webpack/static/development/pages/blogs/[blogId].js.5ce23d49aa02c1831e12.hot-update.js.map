{"version":3,"file":"static/webpack/static/development/pages/blogs/[blogId].js.5ce23d49aa02c1831e12.hot-update.js","sources":["webpack:///./modules/Blogs/blogTemplate.js"],"sourcesContent":["import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport \"../../CSS/index.css\";\nimport Footer from \"../Footer/footer\";\nimport Head from \"next/head\";\nimport Loader from \"../Loader/loader\";\nimport BackButton from \"../BackButton/backButton\";\nimport Link from \"next/link\";\nimport \"./blog.css\";\nimport postsListDetail from \"../helper/postsDetailList.json\";\nexport default class Blog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { blogData: props.blogData };\n    this.readTime = this.readTime.bind(this);\n    this.constructPage = this.constructPage.bind(this);\n    this.getBlogData = this.getBlogData.bind(this);\n    this.getPageLinks = this.getPageLinks.bind(this);\n    this.wordsPerMinute = 200;\n  }\n  getTime(timeinSec) {\n    var utcSeconds = timeinSec;\n    var d = new Date(0);\n    d.setUTCSeconds(utcSeconds);\n    return d.toDateString();\n  }\n  getPageLinks() {\n    let links = [];\n    if (this.state.blogData.prevBlogTitle) {\n      links.push(\n        <Link\n          key=\"prevBlog\"\n          as={this.state.blogData.prevBlogUrl}\n          href=\"/blogs/[blogId]\"\n        >\n          <li\n            style={{ marginBottom: \"10px\", width: \"100%\", textAlign: \"left\" }}\n          >\n            ← <a>{this.state.blogData.prevBlogTitle}</a>\n          </li>\n        </Link>\n      );\n    }\n    if (this.state.blogData.nextBlogTitle) {\n      links.push(\n        <Link\n          key=\"nextBlog\"\n          as={this.state.blogData.nextBlogUrl}\n          href=\"/blogs/[blogId]\"\n        >\n          <li style={{ width: \"100%\", textAlign: \"right\" }}>\n            <a>{this.state.blogData.nextBlogTitle}</a> →\n          </li>\n        </Link>\n      );\n    }\n    return links.length > 0 ? links : \"\";\n  }\n  constructPage() {\n    return (\n      <div className=\"card first blogPage\">\n        <h1>{this.state.blogData.title}</h1>\n        <p className=\"date\">\n          {this.getTime(this.state.blogData.timestamp[\"_seconds\"]) +\n            this.readTime(this.state.blogData[\"content\"])}\n        </p>\n        {ReactHtmlParser(this.state.blogData.content)}\n        {this.getPageLinks() ? (\n          <ul\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              listStyle: \"none\",\n              padding: \"0px\",\n              textDecoration: \"underline\",\n              color: \"#db5461\",\n            }}\n          >\n            {this.getPageLinks()}\n          </ul>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n\n  readTime(text) {\n    let result = \"\";\n    let textLength = text.split(\" \").length; // Split by words\n    if (textLength > 0) {\n      let value = Math.ceil(textLength / this.wordsPerMinute);\n      result = ` • ☕️ ${value} min read`;\n    }\n    return result;\n  }\n  async getBlogData() {\n    try {\n      let res = await fetch(\"/api/getBlog?id=\" + this.props.blogId);\n      let json = await res.json();\n      this.setState({ blogData: json[\"data\"] });\n    } catch (error) {\n      this.setState({ blogData: postsListDetail[this.props.blogId][\"data\"] });\n    }\n  }\n  componentDidMount() {\n    if (!this.state.blogData) {\n      this.getBlogData();\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.blogId !== prevProps.blogId) {\n      this.setState({ blogData: \"\" });\n      this.getBlogData();\n    }\n  }\n\n  render() {\n    let view = \"\";\n    if (this.state.blogData) {\n      view = (\n        <>\n          <BackButton backTo={\"/blogs\"} />\n          <Head>\n            <title>{this.state.blogData.title}</title>\n            <meta\n              name=\"description\"\n              content={this.state.blogData.description}\n            />\n          </Head>\n          <div className=\"wrapper\">\n            <div className=\"top\"></div>\n            <div className=\"content\">{this.constructPage()}</div>\n          </div>\n          <Footer />\n        </>\n      );\n    } else {\n      view = <Loader />;\n    }\n    return <>{view}</>;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAiBA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;AAGA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAIA;AACA;AAFA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AACA;;;;AAnIA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}