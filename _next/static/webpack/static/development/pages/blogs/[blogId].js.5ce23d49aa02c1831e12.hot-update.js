webpackHotUpdate("static/development/pages/blogs/[blogId].js",{

/***/ "./modules/Blogs/blogTemplate.js":
/*!***************************************!*\
  !*** ./modules/Blogs/blogTemplate.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Blog; });
/* harmony import */ var _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs2/regenerator */ "./node_modules/@babel/runtime-corejs2/regenerator/index.js");
/* harmony import */ var _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/inherits */ "./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var react_html_parser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-html-parser */ "./node_modules/react-html-parser/lib/index.js");
/* harmony import */ var react_html_parser__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_html_parser__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _CSS_index_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../CSS/index.css */ "./CSS/index.css");
/* harmony import */ var _CSS_index_css__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_CSS_index_css__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _Footer_footer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Footer/footer */ "./modules/Footer/footer.js");
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/head */ "./node_modules/next/dist/next-server/lib/head.js");
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _Loader_loader__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Loader/loader */ "./modules/Loader/loader.js");
/* harmony import */ var _BackButton_backButton__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../BackButton/backButton */ "./modules/BackButton/backButton.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _blog_css__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./blog.css */ "./modules/Blogs/blog.css");
/* harmony import */ var _blog_css__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_blog_css__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _helper_postsDetailList_json__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../helper/postsDetailList.json */ "./modules/helper/postsDetailList.json");
var _helper_postsDetailList_json__WEBPACK_IMPORTED_MODULE_16___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../helper/postsDetailList.json */ "./modules/helper/postsDetailList.json", 1);







var __jsx = react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement;











var Blog =
/*#__PURE__*/
function (_React$Component) {
  Object(_babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(Blog, _React$Component);

  function Blog(props) {
    var _this;

    Object(_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, Blog);

    _this = Object(_babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__["default"])(this, Object(_babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__["default"])(Blog).call(this, props));
    _this.state = {
      blogData: props.blogData
    };
    _this.readTime = _this.readTime.bind(Object(_babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this));
    _this.constructPage = _this.constructPage.bind(Object(_babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this));
    _this.getBlogData = _this.getBlogData.bind(Object(_babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this));
    _this.getPageLinks = _this.getPageLinks.bind(Object(_babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this));
    _this.wordsPerMinute = 200;
    return _this;
  }

  Object(_babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Blog, [{
    key: "getTime",
    value: function getTime(timeinSec) {
      var utcSeconds = timeinSec;
      var d = new Date(0);
      d.setUTCSeconds(utcSeconds);
      return d.toDateString();
    }
  }, {
    key: "getPageLinks",
    value: function getPageLinks() {
      var links = [];

      if (this.state.blogData.prevBlogTitle) {
        links.push(__jsx(next_link__WEBPACK_IMPORTED_MODULE_14___default.a, {
          key: "prevBlog",
          as: this.state.blogData.prevBlogUrl,
          href: "/blogs/[blogId]"
        }, __jsx("li", {
          style: {
            marginBottom: "10px",
            width: "100%",
            textAlign: "left"
          }
        }, "\u2190 ", __jsx("a", null, this.state.blogData.prevBlogTitle))));
      }

      if (this.state.blogData.nextBlogTitle) {
        links.push(__jsx(next_link__WEBPACK_IMPORTED_MODULE_14___default.a, {
          key: "nextBlog",
          as: this.state.blogData.nextBlogUrl,
          href: "/blogs/[blogId]"
        }, __jsx("li", {
          style: {
            width: "100%",
            textAlign: "right"
          }
        }, __jsx("a", null, this.state.blogData.nextBlogTitle), " \u2192")));
      }

      return links.length > 0 ? links : "";
    }
  }, {
    key: "constructPage",
    value: function constructPage() {
      return __jsx("div", {
        className: "card first blogPage"
      }, __jsx("h1", null, this.state.blogData.title), __jsx("p", {
        className: "date"
      }, this.getTime(this.state.blogData.timestamp["_seconds"]) + this.readTime(this.state.blogData["content"])), react_html_parser__WEBPACK_IMPORTED_MODULE_8___default()(this.state.blogData.content), this.getPageLinks() ? __jsx("ul", {
        style: {
          display: "flex",
          justifyContent: "space-between",
          listStyle: "none",
          padding: "0px",
          textDecoration: "underline",
          color: "#db5461"
        }
      }, this.getPageLinks()) : "");
    }
  }, {
    key: "readTime",
    value: function readTime(text) {
      var result = "";
      var textLength = text.split(" ").length; // Split by words

      if (textLength > 0) {
        var value = Math.ceil(textLength / this.wordsPerMinute);
        result = " \u2022 \u2615\uFE0F ".concat(value, " min read");
      }

      return result;
    }
  }, {
    key: "getBlogData",
    value: function getBlogData() {
      var res, json;
      return _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.async(function getBlogData$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.awrap(fetch("/api/getBlog?id=" + this.props.blogId));

            case 3:
              res = _context.sent;
              _context.next = 6;
              return _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.awrap(res.json());

            case 6:
              json = _context.sent;
              this.setState({
                blogData: json["data"]
              });
              _context.next = 13;
              break;

            case 10:
              _context.prev = 10;
              _context.t0 = _context["catch"](0);
              this.setState({
                blogData: _helper_postsDetailList_json__WEBPACK_IMPORTED_MODULE_16__[this.props.blogId]["data"]
              });

            case 13:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, [[0, 10]]);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.state.blogData) {
        this.getBlogData();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props.blogId !== prevProps.blogId) {
        this.setState({
          blogData: ""
        });
        this.getBlogData();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var view = "";

      if (this.state.blogData) {
        view = __jsx(react__WEBPACK_IMPORTED_MODULE_7___default.a.Fragment, null, __jsx(_BackButton_backButton__WEBPACK_IMPORTED_MODULE_13__["default"], {
          backTo: "/blogs"
        }), __jsx(next_head__WEBPACK_IMPORTED_MODULE_11___default.a, null, __jsx("title", null, this.state.blogData.title), __jsx("meta", {
          name: "description",
          content: this.state.blogData.description
        })), __jsx("div", {
          className: "wrapper"
        }, __jsx("div", {
          className: "top"
        }), __jsx("div", {
          className: "content"
        }, this.constructPage())), __jsx(_Footer_footer__WEBPACK_IMPORTED_MODULE_10__["default"], null));
      } else {
        view = __jsx(_Loader_loader__WEBPACK_IMPORTED_MODULE_12__["default"], null);
      }

      return __jsx(react__WEBPACK_IMPORTED_MODULE_7___default.a.Fragment, null, view);
    }
  }]);

  return Blog;
}(react__WEBPACK_IMPORTED_MODULE_7___default.a.Component);



/***/ }),

/***/ "./modules/helper/postsDetailList.json":
/*!*********************************************!*\
  !*** ./modules/helper/postsDetailList.json ***!
  \*********************************************/
/*! exports provided: everything-you-need-to-know-about-require-in-nodejs-and-maintaining-its-cache, fascinating-paradoxes, eratosthenes-and-the-earths-circumference, prime-number-sieves, concept-of-xiralback, amazing-rhombic-dodecahedron, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"everything-you-need-to-know-about-require-in-nodejs-and-maintaining-its-cache\":{\"data\":{\"title\":\"Everything you need to know about \\\"require\\\" in NodeJS and maintaining it’s cache.\",\"description\":\"This article explores how the Node.js module system & CommonJS works and how to effectively require files in a server running on Node JS\",\"timestamp\":{\"_seconds\":1577817000,\"_nanoseconds\":0},\"content\":\"<p>I got into studying the Node JS module system to solve the problem of reducing the 5XX count on the company’s mobile website(<a href=\\\"/aboutMe\\\">Click to learn more about what I do</a>), this count used to shoot up on every release which required restarting of our NodeJS servers. We all have faced this issue of restarting the node JS server for reflecting our changes in the server code and a popular workaround is to use npm packages such as <a href=\\\"https://www.npmjs.com/package/daemon\\\" target=\\\"_blank\\\">daemon - npm</a>  or <a href=\\\"https://www.npmjs.com/package/forever\\\" target=\\\"_blank\\\">forever - npm</a> and that's all great but only during development as in a production environment this would eat up a lot of memory and would generate a lot of 5XXs if you have a large user base.</p><p><span class=\\\"highlight\\\">So, the problem was simple, to push code changes on a node server running in a production environment without restarting it...</span>sounds like a solution for this should already exist, well it kind of does but you need to dig deep into the <a href=\\\"https://nodejs.org/en/docs/\\\" target=\\\"_blank\\\">NodeJS docs</a>.I'll be sharing my solution to this and some statistics of what change it brought to the overall 5XX count after going through a series of concepts about the module management system in NodeJS. Let’s start with CommonJS… </p><div><h2>CommonJS what, why and the how?</h2><p><strong>What is it? </strong>CommonJS is a module formatting system. It is a standard for structuring and organizing the JavaScript code and the reason why I was concerned with it was because CJS has heavy influence on <strong>NodeJS’s module management.</strong><p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"/images/confused.gif\\\" alt=\\\"A confused gif did not load:(\\\"></p></p></div><p><strong>What's that...a module?</strong> Well a module is just a bit of code encapsulated in a file and exported to another file. Modules focus on a single part of the functionality and remain loosely coupled with other files in an application. This is because there are no global or shared variables between modules, as they only communicate via the module.exports object. Any code that you want to be accessible in another file can be a module..so just say bye to using global variables and giving them complex names for protecting their values from being overridden!</p><br><p><strong>How? \\n</strong>CommonJS wraps each module in a function called 'require', and includes an object called 'module.exports', which exports code for availability to be required by other modules. All you have to do is add whatever you want access to other files onto the 'exports' object and require the module in the dependent file. the syntax for the require function is \\\"var someVariable = require('moduleID/pathOfModule');\\\". Here’s an example…</p>\\n<pre class='code code-javascript'><code>\\n//In multiply.js\\n\\nfunction multiply (a, b) {\\n  return a * b\\n}\\nmodule.exports = multiply\\n\\n//In someOther.js\\n\\nvar a  =  require('multiply.js').multiply(2,3);\\n\\n</code>\\n</pre>\\n\\n<h2>All about “require”</h2>\\n<p>The module loading mechanism in Node.js is caching the modules on the first require call. It means that every time you use <strong>require(‘multiply.js’)</strong> you will get the same instance of multiply-module, which ensures that the modules are singleton-like and have the same state across your application.</p>\\n<p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"/images/node-js-require-works.png\\\" alt=\\\"A confused gif did not load:(\\\"></p>\\n<p>All these steps are performed whenever we require a module in NodeJS and is pretty self explanatory…but what we need to manipulate a little is the caching part...and yes, one more thing about require is that if the identifier passed to the require function is not a native module or a file reference (beginning with /, ../, ./ or similar), then Node.js will look for installed modules traversing the file system looking for the referenced module in the node_modules folder. </p>\\n<h2>The solution - Inspecting require.cache</h2>\\n<p>When we console.log(require.cache) in a js file requiring a file from another module and run it in node js,it looks something like this..</p>\\n<p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"/images/filledRequire.png\\\" alt=\\\"Require Obj didn't load on your browser..\\\"></p>\\n<p>Clearly , require.cache is an object containing multiple nested objects , the key to these nested objects is the filepath which was required in the js-file.In this example <span class=\\\"highlight\\\">test.js requires a file  data.json</span></p>\\n<p>So the file <span calss=\\\"highlight\\\">'/Users/rohangrover/Desktop/nodeTest/data.json'</span> has been cached..having data  {\\n  \\\"someKey\\\": \\\"someData\\\"\\n}\\n</p>\\n<p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"/images/knoweverything.jpg\\\" alt=\\\"Now you know everything...\\\"></p>\\n\\n<p>Well now it is pretty straight forward to figure out what to do next..just delete the file path you want node js to reload with the updated code...<span class=\\\"highlight\\\">the path needs to be absolute\\n</span></p>\\n\\n<pre class='code code-javascript'><code>\\ndelete require.cache['/Users/rohangrover/Desktop/nodeTest/data.json']\\n</code>\\n</pre>\\n\\n<p>Here is a code snippet that allows you to traverse through the entire project structure, written as event emitter(<a href=\\\"https://nodejs.org/api/events.html\\\" target=\\\"_blank\\\">What's an event emitter?</a>)</p>\\n\\n<pre class='code code-javascript'><code>\\nconst EventEmitter = require('events');\\nclass cacheHandler extends EventEmitter\\n{\\n    parseCachedFiles()\\n    {\\n        let procSucess=true,cn=1,data={\\\"files\\\":{}};\\n        for(let prop in require.cache)\\n        {\\n            let cacheStatus=this.clearCache(prop);\\n            if(cacheStatus===\\\"success\\\")\\n            {\\n                data[\\\"files\\\"][cn] = prop;\\n                cn++;\\n            }\\n            else\\n            {\\n                data[\\\"error\\\"] = cacheStatus;\\n                procSucess=false;\\n                break;\\n            }\\n      }\\n        if(procSucess)//cache cleaned successfully.\\n        {\\n          console.info(data);\\n        }\\n        else//cache cleaning failed\\n        {\\n          console.error(data);\\n        }\\n    }\\n    clearCache(filePath)\\n    {\\n        try{\\n            delete require.cache[filePath];\\n            return \\\"success\\\";\\n        }\\n        catch(error)\\n        {\\n            return error\\n        }\\n    }\\n}\\n\\nmodule.exports = cacheHandler;\\n</code>\\n</pre>\\n\\n<p>Create an instance</p>\\n\\n<pre class='code code-javascript'><code>\\nvar cacheHandler = require('./cacheHandler');\\nvar cData = new cacheHandler();\\ncData.on('clearCache', cData.parseCachedFiles);\\n</code>\\n</pre>\\n\\n<p>Emit it when there is an update in your server code</p>\\n\\n<pre class='code code-javascript'><code>\\n cData.emit('clearCache');\\n</code>\\n</pre>\",\"prevBlogTitle\":\"\",\"prevBlogUrl\":\"\",\"nextBlogTitle\":\"Fascinating Paradoxes\",\"nextBlogUrl\":\"/blogs/fascinating-paradoxes/\"}},\"fascinating-paradoxes\":{\"data\":{\"content\":\"<div class=\\\"entry\\\">       <p>Mathematicians and Physicist sometimes confront problems having two statements that are both true but in general,both cannot be true at the same time.These self-contradicting statements forms a paradox.I first read about them in <a href=\\\"https://en.wikipedia.org/wiki/Douglas_Hofstadter\\\"><strong>Douglas Hofstadter’s</strong></a>  Gödel, Escher, Bach: an Eternal Golden Braidand and since then I got more interested in these types of problems.Lets have a look at some of the most enthralling mathematical paradoxes!</p>      <h2 id=\\\"zenos-paradox\\\">Zeno’s Paradox</h2>      <p>Zeno of Elea proposed four paradoxes in an effort to challenge the accepted notions of space and time.I will be writting about the first of his four famous paradoxes that attacks the notion held by many philosophers of his day that space was infinitely divisible.</p>      <p><strong>Here’s the paradox:</strong>   If Achillies and tortoise had a race and the tortoise was given a head start say a 100 meters and if we suppose that each racer starts running at some constant speed (one very fast and one very slow), then after some finite time, Achilles will have run 100 meters, bringing him to the tortoise’s starting point. During this time, the tortoise has run a much shorter distance, say, 10 meters. It will then take Achilles some further time to run that distance, by which time the tortoise will have advanced farther; and then more time still to reach this third point, while the tortoise moves ahead. Thus, whenever Achilles reaches somewhere the tortoise has been, he still has farther to go. Therefore, because there are an infinite number of points Achilles must reach where the tortoise has already been, he can never overtake the tortoise.</p>      <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"https://upload.wikimedia.org/wikipedia/commons/6/66/Zeno_Achilles_Paradox.png\\\" alt=\\\"\\\"></p>      <p>However,whatever the paradox might be in a real case scenario Achillies would easily over take the tortoise but why does the above statement also seems about just right?</p>      <p>As a matter of fact any person running from point A to another point B goes through infinitely many intervals so how is he able to reach point B?</p>      <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"http://personal.lse.ac.uk/robert49/ebooks/PhilSciAdventures/img/Achilles.gif\\\" alt=\\\"\\\"></p>      <h3>Explanation</h3>      <p>The answer to this is something to do with our conception of infinity.There are divergent series and convergent series. The most obvious divergent series is 1 + 2 + 3 + 4 … There’s no answer to that equation. Or, more precisely, the answer is “infinity.” If Achilles had to cover these sorts of distances over the course of the race—in other words, if the tortoise were making progressively larger gaps rather than smaller ones—Achilles would never catch the tortoise.</p>      <p>Now consider the series 1/2 + 1/4 + 1/8 + 1/16 … Although the numbers go on forever, the series converges, and the solution is 1. As long as Achilles is making the gaps smaller at a sufficiently fast rate, so that their distances look more or less like this equation, he will complete the series in a measurable amount of time and catch the tortoise.</p>      <h2 id=\\\"banach-tarski-paradox\\\">Banach-Tarski Paradox</h2>      <p>In 1924 <strong>STEFAN  BANACH</strong> and <strong>ALFRED TARSKI</strong> two polish mathematicians stunned the mathematical community by presenting a mathematical sound proof of the following assertion :</p>      <p><em>It is theoritically possible to cut a solid ball into 9 pieces and by reassembling them,without ever stretching or wrapping the pieces, form <strong>TWO</strong> solid balls,each exactly the same size and shape as the original.</em></p>  <p>This statement is a proven mathematical fact that is beyond our understanding of how area and volume should behave for us <strong>the volume of a finite quantity should not double after rearranging its pieces !</strong></p>      <p>Why can’t this be done in real life, say, with a block of gold?</p>      <p>What mathematicians  have come to realize is that “area” is not a well-defined concept:not every shape in a plane can be assigned an area(nor can every solid in three-dimensional space be assigned a volume).There exist certain non-measurable sets about which speaking of there area is meaningless.The nine pieces used in the Banach-Tarski paradox turn out to be such non-measurable sets and so speaking of their volume is invalid.(They are extremely jagged shapes,FRACTAL in nature and impossible to physically cut out.)</p>      <p>Our simple intuitive understanding of area,works well in all practical applications.The material presented in a typical high-school and college cirriculum, for example,is sound.However,the Banach-Tarakshi paradox points out that extreme care must be taken when exploring the theoritical subteleties of area and volume in greater detail.</p>      <h4 id=\\\"try-and-figure-out-the-maths-behind-it-with-this-paper-written-by-tom-weston\\\">Try and figure out the Maths behind it with this paper written by <strong>Tom Weston</strong></h4>      <style>   .embed-container {     position: relative;     padding-bottom: 56.25%;     height: 0;     overflow: hidden;     max-width: 100%;   }   .embed-container iframe,   .embed-container object,   .embed-container embed {     position: absolute;     top: 0;     left: 0;     width: 100%;     height: 100%;   }   </style>      <div class=\\\"embed-container\\\">   <iframe src=\\\"https://drive.google.com/file/d/0B2OQJUPf1bWccnhoazdMMUM3Vkk/preview\\\" width=\\\"640\\\" height=\\\"480\\\"></iframe>   </div>      <h2 id=\\\"the-lawyer-paradox\\\">The Lawyer Paradox</h2>      <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"https://i0.wp.com/www.newyorker.com/wp-content/uploads/2012/06/supreme-court-guide.jpg\\\" alt=\\\"\\\"></p>      <p>This paradox is traditionally ascribed to the Greek philosopher Protagoras.</p>      <p>A law instructor accepts a penniless student under his wing for tution under the agreement that the student pay the tutor his fees if and only if he wins his first case in court.However, after qualifying as a lawyer, the student takes up a different career and never undertakes a first case.</p>      <p>The tutor later sues him for his fees.The student cleverly decides to represent his own case.This way,he reasons he need never pay the tutor his fees.If he wins the case,the ruling shall be that he need not pay,whereas if he loses the case, he would be exempted from paying as per his previous agreement with the tutor.<strong>Suprisingly</strong>,the tutor reasons too that he cannot lose.If the student wins this case,then he must pay the fees according to their previous agreement,whereas if the student loses,the ruling shall be that he must pay!</p>      <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"http://i1.wp.com/caregiverrelief.com/wp-content/uploads/2012/11/confused_man.gif\\\" alt=\\\"\\\"></p>      <h2 id=\\\"bertrands-paradox\\\">Bertrand’s paradox</h2>      <p>French mathematician Joseph Louis Francois posed the following challenge:</p>      <p><em>Imagine an equilateral TRIANGLE drawn inside a CIRCLE.Find the probability that a chord chosen at random is longer than the side length of the triangle.</em></p>      <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"https://drive.google.com/uc?export=download&amp;id=0B2OQJUPf1bWcaUZSdEJLVEY3LXM\\\" alt=\\\"\\\"></p>      <p>1.Once a chord is drawn we can always rotate the picture of the circle so that one end of the selected chord is placed at the top of the circle.It is clear then that the length of the chord will be greater than the side-length of the triangle if the other end-point lies in the middle third perimeter of the circle.The chances of this happening are 1/3,providing the answer to the problem.</p>      <p>2.Rotating the picture of the circle and the selected chord we can also assume that the chord chosen is horizontal.If the chord crosses the solid line shown then it will be longer than the side-length of the triangle.One observes that this solid line is half the length of the diameter .Thus the chances of a chord being longer than the side-length of the triangle are 1/2.</p>      <p><em>Suprisingly,both lines of reasoning are mathematically correct.Therein lies the PARADOX:the answer cannot simultaneously be 1/3 and 1/2.</em></p>      <hr>      <blockquote>     <p>If you enjoyed this post, I’d be grateful if you’d help it spread by emailing it to a friend, or sharing it on Twitter or Facebook. Thank you!</p>   </blockquote>     </div>\",\"timestamp\":{\"_seconds\":1311705000,\"_nanoseconds\":0},\"title\":\"Fascinating Paradoxes\",\"description\":\"<p>Mathematicians and Physicist sometimes confront problems having two statements that are both true but in general,both cannot be true at the same time.These self-contradicting statements forms a paradox.I first read about them in <a href=\\\"https://en.wikipedia.org/wiki/Douglas_Hofstadter\\\"><strong>Douglas Hofstadter’s</strong></a>  Gödel, Escher, Bach: an Eternal Golden Braidand and since then I got more interested in these types of problems.Lets have a look at some of the most enthralling mathematical paradoxes!</p>\",\"prevBlogTitle\":\"Everything you need to know about \\\"require\\\" in NodeJS and maintaining it’s cache.\",\"prevBlogUrl\":\"/blogs/everything-you-need-to-know-about-require-in-nodejs-and-maintaining-its-cache/\",\"nextBlogTitle\":\"Eratosthenes and the Earth's circumference\",\"nextBlogUrl\":\"/blogs/eratosthenes-and-the-earths-circumference/\"}},\"eratosthenes-and-the-earths-circumference\":{\"data\":{\"content\":\"<article class=\\\"post\\\">  <div class=\\\"space-extra-small\\\">  </div>    <div class=\\\"entry\\\">     <p>In my last blog I talked about this Greek mathematician <strong>Eratosthenes</strong> and how he worked the famous “Sieve of Eratosthenes” which was the first efficient way to determine which numbers are primes.The sieve is still used in modern number theory.But what still amazes mathematicians is how he was able to calculate the size of the Earth without leaving Egypt which was remakably accurate!</p>  <h2 id=\\\"how-did-he-go-about-it\\\">How did he go about it?</h2>  <p><strong>Eratosthenes</strong> was born in Cyrene,Libya,near the Mediterranean coast and lived a lot of his life in Egypt.He found out that on a certain day in Aswan(to the south of Egypt) at noon the sun was directly overhead a well thus whenever someone looked into it no shadow was cast.</p>  <p><img class=\\\"blogImg\\\" src=\\\"/images/Egypt-train-map.jpg\\\" alt=\\\"GitHub Logo\\\"></p>  <p>He then went to north of Aswan in the Mediterranean coastal city of Alexandria.Here the objects did cast shadows,the sun was never vertically overhead an object on <em>any</em> day.He possibly knew the Earth was round(which the Greeks knew anyway) and what he observed at the two places was due to the Earth’s curvature.Now with only this information in hand he decided to find the circumference of the Earth.</p>  <p>The challenge faced by him was not an easy one imagine something like this you have been given the leftover crust of a pizza and told to calculate its <strong>size</strong>.</p>  <p><img class=\\\"blogImg\\\" src=\\\"/images/pizza.jpg\\\" alt=\\\"GitHub Logo\\\"></p>  <p>Let’s find out how he did it.</p>  <h2 id=\\\"the-calculations\\\">ThE CaLculaTioNs:</h2>  <p>He used the simple rule we learned from <strong>Euclid</strong> that if you have a straight line that intersects two parallel lines,then the alternate angles are the same.</p>  <p><img class=\\\"blogImg\\\" src=\\\"/images/eratosthenes_alternateangles.jpg\\\" alt=\\\"GitHub Logo\\\"></p>  <p>Yes,its true that the sun rays are not exactly parallel but because the sun is so much larger than the Earth,they were parallel enough for Eratosthenes.To get a rough idea have a look at my calculations:</p>  <p><img class=\\\"blogImg\\\" src=\\\"/images/earth.jpg\\\" alt=\\\"GitHub Logo\\\"></p>  <p><strong>Obelisk</strong> mentioned above is a four-sided, narrow tapering monument which ends in a pyramid-like shape or pyramidion at the top.</p>  <p>Here <strong>‘d’</strong> is the distance between Alexandria and Aswan there are many theories as to how he got the distance one of which is that the distance was corroborated by inquiring about the time that it took to travel from Aswan to Alexandria by camel.</p>  <h3 id=\\\"values-that-we-know\\\">Values that we know</h3>  <ul>   <li>‘h’ height of the obelisk</li>   <li>’s’ length of the shadow that it casts in Alexandria</li>   <li>‘d’ distance between the two places</li> </ul>  <p>So all we need to do is to calculate the angle ‘A’ formed by the end of the shadow to the top of obelisk. This angle will be the same as the angle ‘B’.Once we know angle ‘B’ we can divide 360 by that angle and multiply the ratio by the distance from the well to the obelisk (i. e., Syrine to Alexandri) and we’ll have the circumference of the earth.</p>  <p>We don’t have Eratosthenes’ original paper (or rather, his papyrus) so we don’t know the exact numbers he had. But we do know if he had used a 20.7264 meter obelisk it would have thrown a shadow that was 2.616 meters long.</p>  <p>Using <strong>Trigonometry</strong> we know:</p>  <p>tan(∠ A) = opposite / adjacent = s / h;  This means if the shadow is 2.616 meters and the obelisk is 20.7264 meter, the tangent of the angle ∠ ADE = 2.616/20.7264 = 0.1262.</p>  <p>If you look up the angle for that tangent - that is the arctangent of 0.1265 - you find the angle is 7.2 degree(approx.)</p>  <p>But since ∠ A and ∠ B are alternate angles from of the parallel sun’s rays. So we know that,</p>  <p><strong>∠ A = 7.2 degrees = ∠ B</strong></p>  <p>Now degrees are not absolute numbers but are relative values of how much of the circle the angle spans. For instance an angle of 36 degrees spans 100 × 36/360 = 10 % of the circle.</p>  <p>So from Eratosthenes’ calculation we know that 7.2 degrees spans the arc of the earth’s circumference that runs from Aswan to Alexandria. So the percentage of a circle between the two cities is:</p>  <p><strong>100 × 7.2 / 360 = 2 %</strong></p>  <p>So the distance from Aswan to Alexandria is 2%(1/50th) of the total circumference of the earth.</p>  <p>=&gt; <strong>Circumference of the Earth = 50 × 500 miles = 25,000 miles   thats 40233.6 km.</strong></p>  <p>According to the most recent value from NASA, the circumference of the Earth is <strong>40,075 km</strong>.That’s only  a percent off!</p>  <p><strong>Fun Fact</strong>:</p>  <p><img class=\\\"blogImg\\\" src=\\\"/images/chris.png\\\" alt=\\\"GitHub Logo\\\"> When <strong>Christopher Columbus</strong> went to explore the world he also calculated the size of the earth. He determined the earth had a circumference of about 15,000 miles - off by almost 40 %! Christopher was better at sailing than he was at math :)</p>         </div>       </article>\",\"timestamp\":{\"_seconds\":1311013800,\"_nanoseconds\":0},\"description\":\"In my last blog I talked about this Greek mathematician <strong>Eratosthenes</strong> and how he worked the famous “Sieve of Eratosthenes” which was the first efficient way to determine which numbers are primes.The sieve is still used in modern number theory.But what still amazes mathematicians is how he was able to calculate the size of the Earth without leaving Egypt which was remakably accurate\",\"title\":\"Eratosthenes and the Earth's circumference\",\"prevBlogTitle\":\"Fascinating Paradoxes\",\"prevBlogUrl\":\"/blogs/fascinating-paradoxes/\",\"nextBlogTitle\":\"Prime Number Sieves\",\"nextBlogUrl\":\"/blogs/prime-number-sieves/\"}},\"prime-number-sieves\":{\"data\":{\"description\":\"<p><strong>Well,we all know what’s prime number</strong>,a whole number greater than 1 whose factors are either one or itself but in this blog I will be writing about Prime Number Sieves which refers to prime number generating algorithms.</p>\",\"content\":\"<div id=\\\"main\\\" role=\\\"main\\\" class=\\\"container\\\">       <article class=\\\"post\\\">  <div class=\\\"space-extra-small\\\">  </div>    <div class=\\\"entry\\\">     <p><strong>Well,we all know what’s prime number</strong>,a whole number greater than 1 whose factors are either one or itself but in this blog I will be writing about Prime Number Sieves which refers to prime number generating algorithms.</p>  <h2 id=\\\"why-should-we-care-about-them\\\">Why should we care about them?</h2>  <p>Most modern computer cryptography works by using the prime factors of large numbers. The large number that was used to encrypt a file can be publicly known and available, because the encryption works so only the prime factors of that large number can be used to decrypt it again. Though finding those factors is technically only a matter of time, it’s a matter of so much time that we say it cannot be done. A modern super-computer could chew on a 256-bit factorization problem for longer than the current age of the universe, and still not get the answer.</p>  <p>Primes are of the utmost importance to number theorists because they are the building blocks of whole numbers.They are important to the world because their odd mathematical properties make them perfect for our current uses. It’s possible that new mathematical strategies or new hardware like quantum computers could lead to quicker prime factorization of large numbers, which would effectively break modern encryption. When researching prime numbers, mathematicians are always being both prosaic and practical.</p>  <p><strong>Jason Davies</strong>, a data visualization specialist and computer scientist, created a model to show a link between various primes .  <img class=\\\"blogImg\\\" src=\\\"http://a.fastcompany.net/multisite_files/codesign/imagecache/inline-zoom/post-inline/prime-number-96.jpg\\\" alt=\\\"\\\"></p>  <p><a href=\\\"https://www.jasondavies.com/primos/\\\"><em>Go to his website-&gt;</em></a></p>  <h2 id=\\\"different-prime-number-sieves\\\">Different Prime Number Sieves</h2>  <h2 id=\\\"sieve-of-eratosthenes\\\"><em>Sieve of Eratosthenes</em></h2> <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"/images/Eratosthene.01.png\\\" alt=\\\"GitHub logo\\\"> Eratosthenes was a Greek mathematician, geographer, poet, astronomer, and music theorist yes,all of this in his life span of 80 years.He was responsible for finding one of the easiest methods for generating primes having a time complexity of O(n log log n) and space complexity of O(n)</p>  <p>Steps involved for generating primes less than or equal to the integer <strong>‘N’</strong>:</p>  <p>1.Make a list of all the integers less than or equal to n (and greater than one)</p>  <p>2.Taking out the first number in the list say x(i.e 2,initially) strike out all the multiples of x where x&lt;=N in the list(when a number is striked it no longer belongs to the list) and x is added to the list of primes.</p>  <p>3.Repeat 2nd step for the next value of x till x&lt;=N</p>  <p>4.The remaining elements of the list are the required prime numbers.</p>  <p><strong>An Example where N is equal to 120</strong> <img class=\\\"blogImg\\\" src=\\\"https://upload.wikimedia.org/wikipedia/commons/b/b9/Sieve_of_Eratosthenes_animation.gif\\\" alt=\\\"\\\"></p>  <p>Try writing a program using the above method.</p>  <hr>  <h2 id=\\\"sieve-of-sp-sundaram\\\"><em>Sieve of SP Sundaram</em></h2>  <p>SP Sundaram was an Indian Mathematician of 1930’s who developed this method that uses Airithmetic sequences for generating primes.</p>  <p><strong>Method</strong></p>  <p>Start with 4 and create an arithmetic sequence by repeatedly adding three… 4, 7, 10, 13, 16, 19, 22… In the second row, start with seven, and add five each time 7, 12, 17, 22, 27,…. continue starting with each number in the first sequence as the initial term, and to each sequence add the next consecutive odd number…</p>  <p>It looks like this</p>  <p>4  7  10  13  16  19  22  25  28</p>  <p>7  12  17  22  27  32  37  42  47</p>  <p>10  17  24  31  38  45  52  59  66</p>  <p>13  22  31  40  49  58  67  76  85</p>  <p>16  27  38  49  60  71  82  93  104</p>  <p>You may observe that the numbers in the first row are the same as in the first column and so are the numbers in second row and second column and so on.</p>  <p>Clearly in this matrix some numbers are prime and others are not. Now if we apply the formula:</p>  <p>p = 2*x + 1,where x ∉ the Matrix and x &lt; 104(largest number of the sequence),we get <strong>‘p’</strong> which is always a prime number although there may be repetitions.</p>  <p>The largest number in the sequence being 104 thus by the above explanation we may concude that we can generate prime numbers that are less than or equal to 209.</p>  <p><strong>Algorithm</strong></p>  <p>printPrimes(n) [Prints all prime numbers smaller than n]</p>  <p>1) In general Sieve of Sundaram, produces primes smaller than     (2*x + 2) for a number given number x. Since we want primes     smaller than n, we reduce n-2 to half. We call it nNew.        nNew = (n-2)/2;</p>  <p>For example, if n = 102, then nNew = 50.</p>  <p>2) Create an array marked[n] that is going     to be used to separate numbers of the form i+j+2ij from     others where  1 &lt;= i &lt;= j</p>  <p>3) Initialize all entries of marked[] as false.</p>  <p>4) // Mark all numbers of the form i + j + 2ij as true    // where 1 &lt;= i &lt;= j    Loop for i=1 to nNew         a) j = i;          b) Loop While (i + j + 2<em>i</em>j) &lt;= nNew              (i)  primes[i + j + 2<em>i</em>j] = true;              (ii) j++</p>  <p>5) If n &gt; 2, then print 2 as first prime.</p>  <p>6) Remaining primes are of the form 2i + 1 where i is    index of NOT marked numbers. So print 2i + 1 for all i    such that marked[i] is false.</p>         </div>       </article>         </div>\",\"title\":\"Prime Number Sieves\",\"timestamp\":{\"_seconds\":1310668200,\"_nanoseconds\":0},\"prevBlogTitle\":\"Eratosthenes and the Earth's circumference\",\"prevBlogUrl\":\"/blogs/eratosthenes-and-the-earths-circumference/\",\"nextBlogTitle\":\"Concept of Xiralback\",\"nextBlogUrl\":\"/blogs/concept-of-xiralback/\"}},\"concept-of-xiralback\":{\"data\":{\"timestamp\":{\"_seconds\":1310495400,\"_nanoseconds\":0},\"description\":\"<p><strong>We all have played with toys</strong> in our childhood,these toys were generally action figures,barbie dolls,racing cars and as we reached adolescense the toys that we used to get also matured a bit from mere action figures to scientific toys teaching us something new.However my first experience to such a toy was when i visited an eye specialist.<br> <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Newtons_cradle_animation_book_2.gif\\\" alt=\\\"\\\"></p>\",\"content\":\"<article class=\\\"post\\\">  <div class=\\\"space-extra-small\\\">  </div>    <div class=\\\"entry\\\">     <p><strong>We all have played with toys</strong> in our childhood,these toys were generally action figures,barbie dolls,racing cars and as we reached adolescense the toys that we used to get also matured a bit from mere action figures to scientific toys teaching us something new.However my first experience to such a toy was when i visited an eye specialist.<br> <img class=\\\"blogImg\\\" src=\\\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Newtons_cradle_animation_book_2.gif\\\" alt=\\\"\\\"></p>  <p>Yes,it was Newton’s Cradle.I know its fun to look at these toys with all the science stuff that gets taged onto your mind as soon as you see one which makes you want to learn all about it. This post is for one of such toys. To understand all about <strong>Xiralback</strong> lets first look at rattleback.</p>  <h2 id=\\\"whats-a-rattleback\\\">What’s a Rattleback?</h2>  <p>Well, rattleback is a desk toy that looks like a pebble which on being rotated on a surface such as a table top would continue to spin in one direction which could be either clockwise or anti-clockwise while when rotated in the other direction would resist its movement and then try to go back in its preferred direction.</p>  <style> .embed-container {   position: relative;   padding-bottom: 56.25%;   height: 0;   overflow: hidden;   max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed {   position: absolute;   top: 0;   left: 0;   width: 100%;   height: 100%; } </style>  <div class=\\\"embed-container\\\">   <iframe title=\\\"YouTube video player\\\" width=\\\"640\\\" height=\\\"390\\\" src=\\\"https://www.youtube.com/embed/69Xm762qE8o\\\" frameborder=\\\"0\\\" allowfullscreen=\\\"\\\"></iframe> </div>  <p>The video would have helped you get a feel of this toy its unique rotating property makes it all the more interesting.In the above rattle back the toy is stable in anti clockwise while unstable in clockwise direction this is because the portion of the toy in contact with the table top is not a half cut ellipsoid but an <strong>S</strong> like surface which makes the toy behave in this manner.</p>      <style> div.scroll {     background-color: pink;     width: 700px;     height: 700px;     overflow: scroll; }  div.hidden {     background-color: white;     width: 10px;     height: 10px;     overflow: hidden; } </style>       <h2 id=\\\"now-lets-get-to-xiralback\\\">Now lets get to Xiralback…</h2> <p>The χiralback is a variation of a rattleback, it has a strong preference for which direction it spins. If spun in the reverse direction, it converts its energy into a rattle, and then spins back in the preferred direction. This behavior seems to defy the physical law requiring the conservation of angular momentum. The strength of the effect varies on the surface on which it is spun.</p>  <p>Older explanations of rattlebacks have focussed on surface asymmetries near the place where the bottom of the rattleback rests.But the surface of this one is a <strong>symmetrical ellipsoid given by the equation x^2/a^2 + y^2/b^2 + z^2/c^2 = 1</strong>.</p>  <p>It also has the property that if it is turned upside down, then the preferred direction of spin is reversed!  So we call it a χiralback.</p>  <p><strong>A Demonstration and Production video of the toy</strong></p> <style> .embed-container {   position: relative;   padding-bottom: 56.25%;   height: 0;   overflow: hidden;   max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed {   position: absolute;   top: 0;   left: 0;   width: 100%;   height: 100%; } </style>  <div class=\\\"embed-container\\\">   <iframe title=\\\"YouTube video player\\\" width=\\\"640\\\" height=\\\"390\\\" src=\\\"https://www.youtube.com/embed/s5Of6VhmhCI?t=37\\\" frameborder=\\\"0\\\" allowfullscreen=\\\"\\\"></iframe> </div>  <p>The man resposible for this toy is <a href=\\\"https://en.wikipedia.org/wiki/Tadashi_Tokieda\\\"><strong>Mr.Tadashi François Tokieda</strong></a> a Japanese mathematician, specializing in mathematical physics,<strong>Director of Studies in Mathematics</strong> at Trinity Hall, Cambridge</p>  <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"https://www.radcliffe.harvard.edu/sites/radcliffe.harvard.edu/files/styles/large_body/public/imagefield_crop/field_image/person/tadashi-tokieda_photo-by-tony-rinaldo_373px_0.jpg?itok=wNvhJkK4\\\" alt=\\\"\\\"></p>  <h4 id=\\\"if-you-enjoyed-this-post-id-be-very-grateful-if-youd-help-it-spread-by-emailing-it-to-a-friend-or-sharing-it-on-twitter-or-facebook-thank-you\\\">If you enjoyed this post, I’d be very grateful if you’d help it spread by emailing it to a friend, or sharing it on Twitter or Facebook. Thank you!</h4>     </div>       </article>\",\"title\":\"Concept of Xiralback\",\"prevBlogTitle\":\"Prime Number Sieves\",\"prevBlogUrl\":\"/blogs/prime-number-sieves/\",\"nextBlogTitle\":\"Amazing Rhombic Dodecahedron!\",\"nextBlogUrl\":\"/blogs/amazing-rhombic-dodecahedron/\"}},\"amazing-rhombic-dodecahedron\":{\"data\":{\"timestamp\":{\"_seconds\":1309890600,\"_nanoseconds\":0},\"content\":\"<div class=\\\"entry\\\">     <p><strong>The work of the Greek polymath Plato</strong> has kept millions of people busy for millennia. A few among them have been mathematicians who have obsessed about Platonic solids, a class of geometric forms that are highly regular and are commonly found in nature.</p>  <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"/images/platonicsolids.jpg\\\" alt=\\\"GitHub Logo\\\"></p>  <p>Platonic solids, the first class of such shapes, are well known. They consist of five different shapes: tetrahedron, cube, octahedron, dodecahedron and icosahedron. They have four, six, eight, twelve and twenty faces, respectively.</p>  <h2 id=\\\"what-to-learn-from-it\\\">What to learn from it?</h2>  <p>Such mathematical discoveries don’t have immediate applications, but often many are found. For example, dome-shaped buildings are never circular in shape. Instead they are built like half-cut Goldberg polyhedra, consisting of many regular shapes that give more strength to the structure than using round-shaped construction material.</p>  <p>Also what i found intriguing was the beauty of these shapes their symmetric behaviour so i decided to build one of my own,you may not understand this till you look at one in real so <strong>lets get to it</strong> .</p>  <h2 id=\\\"understanding-the-structure\\\">Understanding the structure</h2>  <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"https://upload.wikimedia.org/wikipedia/commons/a/a1/Rhombicdodecahedron.gif\\\" alt=\\\"\\\"></p>  <p>In geometry, the <strong>rhombic dodecahedron</strong> is a convex polyhedron with 12 congruent rhombic faces. It has 24 edges, and 14 vertices of two types. It is a Catalan solid, and the dual polyhedron of the cuboctahedron.</p>  <p>The 14 vertices of the rhombic dodecahedron are joined by 12 rhombi of the dimensions shown in the figure below</p>  <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"http://mathworld.wolfram.com/images/eps-gif/RhombicDodecRhombus_600.gif\\\" alt=\\\"\\\"></p>  <p><strong>The rhombic dodecahedron can be built</strong> up by a placing six cubes on the faces of a seventh, in the configuration of a metal “jack” given below,</p>  <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"http://mathworld.wolfram.com/images/eps-gif/Jack_600.gif\\\" alt=\\\"\\\"></p>  <p>Joining the centers of the outer cubes with the vertices of the central cube then gives the rhombic dodecahedron.</p>  <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"http://mathworld.wolfram.com/images/eps-gif/RhombicJack_600.gif\\\" alt=\\\"\\\"></p>  <p>Calculating the <em>volume</em>:</p>  <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"http://mathworld.wolfram.com/images/equations/RhombicDodecahedron/NumberedEquation1.gif\\\" alt=\\\"\\\"></p>  <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"http://mathworld.wolfram.com/images/equations/RhombicDodecahedron/Inline26.gif\\\" alt=\\\"\\\"></p>  <h2 id=\\\"making-it-yourself\\\">Making it Yourself</h2>  <style> .embed-container {   position: relative;   padding-bottom: 56.25%;   height: 0;   overflow: hidden;   max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed {   position: absolute;   top: 0;   left: 0;   width: 100%;   height: 100%; } </style>  <div class=\\\"embed-container\\\">   <iframe title=\\\"YouTube video player\\\" width=\\\"640\\\" height=\\\"390\\\" src=\\\"https://www.youtube.com/embed/1tkCVKB4ZZ4\\\" frameborder=\\\"0\\\" allowfullscreen=\\\"\\\"></iframe> </div>  <h2 id=\\\"this-is-what-i-made\\\">This is what i Made</h2>  <p class=\\\"tc\\\"><img class=\\\"blogImg\\\" src=\\\"/images/rhombicd.jpg\\\" alt=\\\"GitHub Logo\\\"></p>  <h4>If you enjoyed this post, I’d be very grateful if you’d help it spread by emailing it to a friend, or sharing it on Twitter or Facebook. Thank you!</h4>     </div>\",\"title\":\"Amazing Rhombic Dodecahedron!\",\"description\":\"The work of the Greek polymath Plato has kept millions of people busy for millennia. A few among them have been mathematicians who have obsessed about Platonic solids, a class of geometric forms that are highly regular and are commonly found in nature.\",\"prevBlogTitle\":\"Concept of Xiralback\",\"prevBlogUrl\":\"/blogs/concept-of-xiralback/\",\"nextBlogTitle\":\"\",\"nextBlogUrl\":\"\"}}}");

/***/ })

})
//# sourceMappingURL=[blogId].js.5ce23d49aa02c1831e12.hot-update.js.map